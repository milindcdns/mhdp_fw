======================================================================
Cadence HD Display Transmitter Firmware (FW) Programming Interface
====================================================================== 

1.0 Introduction
================
The HD Display TX Controller integrates a CPP (uCPU) running the embedded Firmware (FW). The FW 
manages the HD Display TX link and provides side-band channel communication. The FW is not 
involved in the data-path (video, audio, or info-frames). 

It is assumed that a host processor interfaces to the HD Display TX Controller over APB-interface. The 
host processor manages the HD Display TX Controller in one or more of the following methods: 

1) Direct access to the HW registers for debugging purposes. 
2) Direct access to I-MEM and D-MEM (during boot) for FW download. 
3) Direct access to the HW registers of designated HW modules during operational mode (modules 
that are not controlled by the FW). 
4) Indirect access to the HW registers of designated HW modules during operational mode, by 
communicating with FW over the command interface (using GENERAL_WRITE_REGISTER and 
GENERAL_READ_REGISTER commands). 
5) Communication with different FW modules over a mailbox using the command interface. 

+--------------------------------------------------------------------------------------------+
|                                                                                            |
|            +------------------------------------------------------------------------+      |
|            |  Host Processor                                                        |      |
|            |    +-----------------------------------------------------------+       |      | 
|            |    |                    HD Display API                         |       |      |  
|            |    |                                                           |       |      |
|            |    +-----------------------------------------------------------+       |      |       
|            +------------------------------------------------------------------------+      |                       
|                                            |                                    |          |
|                                            |Commands over Mailbox               |          |
|                                            |                                    |          |
|                                            V                                    |          |
|            +---------------------------------------------------------------+    |          |
|            |  +------------------------+        +------------------------+ |    |          |
|            |  | SAPB Commands Interface|        | APB Commands Interface | |    |          |
|            |  +------------------------+        +------------------------+ |    |          |
|            |                                                               |    |          |
|            |  +---------+    +-------+   +-------+   +-------+   +-------+ |    |          |
|            |  | DP Link |    | AUX   |   |HDCP   |   |SAPB   |   | APB   | |    | Direct   |
|            |  | Policy  |    |       |   |Auth   |   |Mailbox|   |Mailbox| |    | access   |
|            |  | Maker   |    |       |   |State  |   |Handler|   |Handler| |    | to       |
|            |  +---------+    +-------+   |Machine|   +-------+   +-------+ |    |memories/ |
|            |                             +-------+                         |    |registers |
|            |                                                               |    |          |
|            |            +--------------------------------------+           |    |          |
|            |            | Control Interface Manager            |           |    |          |
|            |            +--------------------------------------+           |    |          |
|            |                      HD Display FW                            |    |          |
|            +---------------------------------------------------------------+    |          |
|                                                                                 V          |
|            +------------------------------------------------------------------------+      |
|            |                                                                        |      |                                                              |
|            |  +----+  +----------+  +----+ +-------+  +-------+   +-------+  +-----+|      |
|            |  |AUX |  | DP       |  |HPD | |APB    |  | SAPB  |   | Timers|  |uCPU ||      |
|            |  |    |  |Controller|  |    | |Mailbox|  |Mailbox|   |       |  |     ||      | 
|            |  +----+  +----------+  +----+ +-------+  +-------+   +-------+  +-----+|      |
|            |                                                                        |      |
|            |             +----------+  +-------+ +-----------+ +----------+ +------+|      |
|            |             |HD Display|  |HDCP   | | Crypto    | |interrupts| |memory||      |
|            |             |   PHY    |  |cipher | |accelerator| |          | |      ||      |
|            |             +----------+  +-------+ +-----------+ +----------+ +------+|      |
|            |                    HD Display Controller/ PHY HW                       |      |
|            +------------------------------------------------------------------------+      |    
+--------------------------------------------------------------------------------------------+
                                  Figure 1: SW Architecture Model
     

2.0 Firmware Modules Description 
================================
2.1 DisplayPort Link Policy Maker 
---------------------------------
The DP Link Policy Maker module performs HPD detection. 
When the link training is finished, the DP TX Link module informs the host processor about any 
changes in the Sink device, such as disconnection from the port. 

2.2 DisplayPort Auxiliary Link Layer
------------------------------------ 
The DP TX Link is the lowest firmware layer that handles read or write request through AUX and I2C-
over-AUX transactions. It processes the requests from the HDCP module and the host processor to 
read EDID or to access the sink DPCD memory space. 
The DP TX Link needs read/write requests from higher firmware layers. It translates the requests into 
AUX or I2C-over-AUX transaction between the Source and Sink devices. After processing the request, 
the requesting module is asynchronously informed about the request result, such as reply command 
from the Sink, number of data written or read, and the data itself if needed. This module processes 
only one request at a time. 

2.3 Mailbox Handler 
-------------------
The Mailbox Handler module handles the commands sent by the host processor to the HD Display TX 
Controller and formats the response messages to the host processor. 
When a message is found in the mailbox, the mailbox handler releases the memory buffers, so it does 
not block communication with other modules. Then if required, it sends a request to the lower layer to 
communicate with the Sink device. After the response is processed, the mailbox handler waits for the 
mailbox to be available and sends the reply. This module handles only one message at a time, so the 
next message directed to the DP module will block the mailbox until the previous message is 
processed. 

2.4 HDCP Authentication 
-----------------------
The HDCP authentication supports both HDCP2.2 and HDCP1.3. The authentication state-machine and 
the cryptographic related libraries are managed by the FW. 

2.5 DDC Master
---------------- 
The DDC Master module serves EDID commands executed by the host processor, using I2C over AUX. 

3.0 Control Interfaces 
======================
The HD Display TX Controller communicates through several APB ports. 

3.1 APB 
-------
The primary APB slave port controls the HD Display TX controller from the host processor. 

During the boot, the primary APB slave port enables access to the I-MEM and D-MEM, and to the full 
address space for debugging purposes. 

After the boot, the primary APB slave port enables direct register access to designated HW modules 
and enables communication with uCPU through a mailbox channel. 

3.2 SAPB
-------- 

The Secure APB (SAPB) port is used only when using Embedded HDCP. This bus is considered as 
secured APB to carry secured commands over the mailbox channel. 

4. Operational Sequence 
=======================
4.1 Boot Sequence 
-----------------
After reset, the uCPU is disabled. The full HD Display TX Controller address space is accessible for the 
host processor for debugging purposes, and the I-MEM and D-MEM. 

The host processor must perform the following: 
• Load the FW into the memories. 
• Enable the uCPU. 
• Verify that FW is running as expected. 

        Host                 Controller
     \    |                      |    \ 
     |    |--------------------->|    |
     |    |                      |    |
    1.1ms |    Load firmware     |   uCPU is hold on reset
     |    |    into memories     |    |
     |    |                      |    |
     \    |--------------------->|    |
          |                      |    |
          |--Set CLK Frequencey->|    |
     \    |                      |    \
     |    |----Release uCPU----->|    \
     |    |                      |    |
     |    |--Read KEEP_ALIVE---->|    |
     |    |<--------0------------|    |
    <2ms  |--Read KEEP_ALIVE---->|   FWINT Phase
     |    |<--------0------------|    |
     |    |                      |    |
     |    |                      |    |
     |    |                      |    |
     |    |                      |    |
     |    |                      |    |
     |    |                      |    |
     \    |---Read KEEP_ALIVE--->|    \ 
          |<--------!=0----------|    \
          |                      |    |
          |-TEST_ECHO (AABBCC)---|    |
          |                      |    |
          |                      |    |
          |                      |    FW is running
          |                      |    |     
          |                      |    |
  FW Boot Completed              |    \

Figure 2: Boot Sequence 

4.2 Setting Core Clock Frequency
--------------------------------
The FW relies on a known core clock frequency for configuring time HW dividers and timeout counters. 

Therefore, core clock frequency must be stored in SW_CLK_H and SW_CLK_L registers by the host 
processor firmware boot. Firmware reads SW_CLK_H and SW_CLK_L registers only once during 
initialization thus it is not possible to change to core clock frequency during operation without resetting 
the IP. 

4.3 Loading Firmware 
---------------------
The FW binaries are provided in the hexadecimal format that is composed from two files iram0.data 
and dram0.data. 

The iram0.data contains the instruction memory and the dram0.data contains the variables 
initialization. 

The external host processor should load the FW into the I-MEM and D-MEM and enable the uCPU. 
Accessing the I-MEM, D-MEM is enabled only after reset (after reset, the system is going into debug 
mode, after loading FW and set APB_CTRL register to 0 system is going out from debug mode, and 
only reset can bring the system back to debug mode). 

After loading the memories, the host processor should select the uCPU to be the master of the I-MEM 
and D-MEM memories and enable the uCPU by writing 0x00 to the APB_CTRL register. 
 
4.4 FW Running indication 
--------------------------
After loading the FW, the embedded FW takes approximately 2ms to complete the INIT phase and start 
running. The KEEP_ALIVE register specifies whether the FW is running. 

• KEEP_ALIVE – The KEEP_ALIVE register is a counter initialized to 0 after reset and incremented 
byte he FW on any scheduler loop. 
• When a valid FW is running, this register will be changed on every FW Scheduler loop (<2ms). 

The host processor may use the mailbox channel immediately after reset, FW will response after the 
completion of INIT phase. 

4.5 Operational mode 
---------------------
After completion of boot sequence, the FW set the HD Display TX Controller in a standby mode. 

In the standby mode, it is ensured that no transaction is executed over the external interfaces (i.e. 
AUX, PHY, Video). 

Switching into active mode is done by executing the GENERAL_MAIN_CONTROL command. 

4.6 Events handling 
-------------------
Events are captured by the HD Display TX Controller FW, where the Event Value is stored in a 
designated area (in the D-MEM) and a bit is set by the FW in SW_EVENTS. 

To capture the event from the IP, host processor can either poll the SW_EVENTS registers (keeping in 
mind it is cleared on read) or wait for dedicated interrupt that informs that SW_EVENTS register is not 
zero which means there is at least one event reported. When event is captured the host processor 
should call the relevant command which returns the Event Value that holds the latest value associated 
with a particular event. Host processor must evaluate if there are more than one even reported when 
SW_EVENT registers are read because all events in the registers are cleared during read. 

Firmware never clears the SW_EVENTS register. The register is cleared only during read by Host 
processor or during reset. 
 
 +------------+-----+------------------------------+----------------------------------------------+
 |  Register  | Bit |      Event                   |          Description                         |
 +============+=====+==============================+==============================================+
 |            | 0   | DPTX_HPD                     |  HPD was changed, (DPTX) READ_EVENT_REQUEST  |
 |            |     |                              |  needs to be called.                         |
 |            +-----+------------------------------+----------------------------------------------+
 |            | 3:1 | Reserved                     |  -                                           |
 |            +-----+------------------------------+----------------------------------------------+
 |            | 4   | HDCP_TX_STATUS               | HDCP TX was changed, (HDCP) TX_STATUS_REQ    |
 |            |     |                              | needs to be called.                          |
 |            +-----+------------------------------+----------------------------------------------+
 |     0      | 5   | HDCP2_TX_IS_KM_STORED        | IP need to check if km is stored, (HDCP)     |
 |            |     |                              | TX_IS_KM_STORED_REQ needs to be called       |
 |            +-----+------------------------------+----------------------------------------------+
 |            | 6   | HDCP2_TX_STORE_KM            | IP has km to store, (HDCP) TX_STORE_KM_REQ   |
 |            |     |                              | needs to be called.                          | 
 |            +-----+------------------------------+----------------------------------------------+
 |            | 7   | HDCP_TX_IS_RECEIVER_ID_VALID | IP has an id to check if it is valid, (HDCP) |
 |            |     |                              | TX_IS_RECEIVER_ID_VALID_REQ needs to be      |
 |            |     |                              | called                                       |
 +------------+-----+------------------------------+----------------------------------------------+
 |     1      |     |                              |                                              |
 +------------+     |                              |                                              |
 |     2      | 7:0 | RESERVED                     |                                              |
 +------------+     |                              |                                              |
 |     3      |     |                              |                                              |
 +------------+-----+------------------------------+----------------------------------------------+
                                  Table 1: SW events vector 

4.7 DisplayPort Source (TX) Sequence 
------------------------------------
The following figure shows the expected host processor and uCPU tasks executed to start a video/audio 
transmission. 

Refer to section 2.9.1 in DP1.4 standard. 

 +-------------------------------+               +------------------------------------------------+                 +----------+
 |                               |               |                                                |                 |          |  
 |                               |               |         Source Device                          |                 |  Sink    |  
 |                               |               |     (Link + PHY layers)                        |                 | Device   | 
 |                               |               |                                                |                 |          |  
 |                               |----GENERAL_MAIN_CONTROL(Ative)---------->| +----------------+  |                 |          |
 |                               |               |                          | |                |  |                 |          |
 |                               |               |                          | | Initialize     |  |<----HPD  -------|          | 
 |                               |<---------Event: dpts_hpd-----------------| |DisplayPort     |  |                 |          |
 | +-----------------------------|               |                          | |                |  |                 |          | 
 | |    Parse Events             |----- DPTX_READ_EVENT_REQUEST------------>| |                |  |                 |          |
 | |                             |               |                          | |                |  |                 |          |   
 | |                             |<------DPTX_EVENT(Plugged)----------------| |                |  |                 |          |  
 | |                             |               |                          | +----------------+  |                 |          |
 | |                             |               |                          |                     |                 |          | 
 | +-----------------------------|-------DPTX_GET_EDID--------------------->| +----------------+  |<----AUX-------->|          |           
 |                               |               |                          | | Read EDID from |  |                 |          |
 |                               |               |                          | |     sink       |  |                 |          |
 | +-----------------------------|               |                          | |                |  |                 |          |
 | |      Read EDID and parse it |               |                          | +----------------+  |                 |          |
 | |                             |<------DPTX_EDID_RESP---------------------|                     |                 |          |
 | |                             |               |                          | +----------------+  |                 |          |
 | +-----------------------------|               |                          | |   DPCD         |  |                 |          |
 |                               |               |                          | |   transactions |  |<----AUX-------->|          | 
 | +-----------------------------|               |                          | | and device     |  |                 |          |
 | |  Manage Training            |<--DPCD amd register operation ---------->| | register       |  |                 |          |
 | |                             |               |                          | | operations     |  |---TX lanes----->|          |
 | +-----------------------------|               |                          | |Delays specific |  |                 |          |
 | Stream source policy maker    |               |                          | |to Link Training|  |                 |          |
 |                               |               |                          | +----------------+  |                 |          |
 |                               |               |                          |                     |                 |          |
 |                               |               |                          | +----------------+  |                 |          |           
 |                               |               |                          | |  HDCP State Mc |  |                 |          |   
 | +-----------------------------|--Start HDCP authentication ------------->| |                |  |                 |          |
 | |check against revocation-list|               |                          | |                |  |<----AUX-------->|          |
 | +-----------------------------|               |                          | |                |  |                 |          |
 |                               |<--HDCP authentication done --------------| |                |  |                 |          |
 |                               |               |                          | +----------------+  |                 |          |
 | +-----------------------------+               |                          |                     |                 |          |
 | | start video (over ViF)      |               |                          |                     |                 |          |           
 | +-----------------------------+     GENERAL_WRITE_REGISTER               | +----------------+  |                 |          |
 | |                             |-------(dptx_stream_bank: TU, MSA)------->| |  HW Video      |  |                 |          |
 | | Configure stream(video)     |                                          | |   stream       |  |---TX lanes----->|          |     
 | |                             |--------write to source_pif bank -------->| | configuration  |  |                 |          |
 | +-----------------------------+     GENERAL_WRITE_FIELD                  | +----------------+  |                 |          |
 | |                             |------(clearing no_video bit)------------>|                     |                 |          |
 | | start Audio(over I2S/SPDIF) |               |                          |                     |                 |          |
 | +-----------------------------+         write to source_pif,             | +-----------------+ |                 |          |
 | | configure stream (audio)    |-source_aif_decder, source_aif_smpl2pckt->| |HW audio decoder | |                 |          |
 | +-----------------------------+   (setting audio_pack_en bit)            | | timestamp and   | |                 |          |
 |                               |                                          | |SDP configuration| |                 |          |
 |                               |               |                          | +-----------------+ |<----AUX-------->|          |
 |                               |               |                          |                     |                 |          | 
 |                               |               |                          |                     |                 |          | 
 +-------------------------------+               |                          |                     |                 |          |
                                                 |                          |                     |                 |          |
 +-------------------------------+               |                          |                     |                 |          |
 |  Monitor Link and HDCP        |               |                          |                     |                 |          |
 |   (wait for event )           |               |                          |                     |                 |          |
 +-------------------------------+               +------------------------------------------------+                 +----------+

             +-------------------+               +---------------+
             |  Host Processor   |               | uCPU          |
             |  tasks            |               | tasks         |
             +-------------------+               +---------------+           
                                     Figure 3: Operation sequence - DisplayPort
 
4.8 HDCP 
-------------
The FW supports embedded HDCP crypto, with optional km-key encryption.

4.8.1	Embedded HDCP Crypto
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In this mode, the HDCP functionality is fully supported by the HD Display TX controller. The AKE phase and the corresponding cryptographic operations are handled by the FW.
Following the AKE phase, the FW initializes the stream cipher with the session key. 
The host processor communicates with the HD Display TX Controller for:
•	Configuring the capabilities
•	Loading the HDCP keys (or certificate)
•	Monitoring authentication status. 
See section Commands Interface for the complete list of commands.

Note:
Commands that carry secret information must be protected from tampering. Therefore, SAPB must be used to carry secured commands over mailbox.

+------------------------+-----------------------------------+
| HDCP command	         |         Description               |
+========================+===================================+
| HDCP_GENERAL_2_SET_LC  | Refer to HDCP2.2 Appendix A       |
+------------------------+-----------------------------------+
| HDCP_ GENERAL_SET_SEED | Third party TRNG must be used for | 
|                        | generating a true random seed     |
|                        | number. Therefore, it is expected | 
|                        | that the seed number will meet the| 
|                        | high entropy level.               |
+------------------------+-----------------------------------+
| HDCP2_TX_RESPOND_KM    | Refer to HDCP2.2 Appendix A       |
+------------------------+-----------------------------------+
| HDCP1_TX_SEND_KEYS     | Refer to HDCP1.4 Appendix B       |
+------------------------+-----------------------------------+
| HDCP2_TX_STORE_KM	 | Refer to HDCP2.2 Appendix A       |
+------------------------+-----------------------------------+
           Table 2: HDCP commands with secret information
 
+-------------+   +----------------------------------------------------+                      +------------+
| Transmitter |   |                                        Transmitter |                      |     Sink   |
| Host        |   |                                         SM         |                      |     Device |
+-------------+   |                                                    |                      |            |
           |      |                                                    |                      |            |
           |------|-HDCP2_TX_SET_PUBLIC_KEY_PARAMS ---->|              |                      |            |  
           |      |                                     |              |                      |            |
           |------|-HDCP_GENERAL_2_SET_LC ------------->|              |                      |            |
           |      |                                     |              |                      |            | 
           |------|-HDCP_TX_CONFIGURATION ------------->|              |                      |            | 
           |      | (activate=1, support HDCP2)         |              |                      |            | 
           |      |                                     |              |                      |            |
           |<-----|-Event : hdcp_tx_status -------------|              |                      |            |
   HDCP    |      |                                     |              |                      |            |
   status  |------|-HDCP_TX_STATUS_REQ ---------------->|              |                      |            |
           |      |                                     |              |                      |            |
           |<-----|-HDCP_TX_STATUS_CHANGE --------------|              |                      |            | 
   HDCP    |      |                                     |              |<--------- AKE------->|            |  
   status  |<-----|-HDCP_TX_IS_KM_STORED ---------------|              |                      |            |
           |      |                                     |              |                      |            |  
           |------|-HDCP_TX_IS_KM_STORED_REQ----------->|              |                      |            |
           |      |                                     |              |                      |            |
           |<-----|- HDCP2_TX_IS_KM_STORED_RESP---------|              |                      |            |
           |      |                                     |              |                      |            |
 ----------|------|-------------------------------------|---+          |                      |            |
 If KM not |      |                                     |   |          |                      |            |
   stored  |----- |- HDCP2_TX_RESPOND_KM (with--------->|   |          |                      |            |
           |      |empty data)                          |   |          |                      |            |
 ----------|------|-------------------------------------+   |          |                      |            |
 If KM     |      |                                     |   |          |                      |            |
   stored  |------|-HDCP2_TX_RESPOND_KM (with---------->|   |          |                      |            |
           |      |pairing data)                        |   |          |                      |            |
 ----------|------|-------------------------------------|---+          |                      |            |
           |<-----| Event: HDCP_TX_IS_RECEIVER_ID_VALID-|              |                      |            |
Host should|      |                                     |              |                      |            |
check SRM  |<-----|-HDCP_TX_IS_RECEIVER_ID_VALID_REQ -->|              |                      |            |
table      |      |                                     |              |                      |            |
           |------|<-HDCP_TX_IS_RECEIVER_ID_VALID_RESP--|              |                      |            |
           |      |                                     |              |                      |            |
           |<-----|-HDCP_TX_RESPOND_RECEIVER_ID_VALID-->|              |                      |            |
           |      |                                     |              |                      |            |
 ----------|------|-------------------------------------|---+          |                      |            |
 If KM not |      |                                     |   |          |                      |            |
   stored  |<-----|-------Event: HDCP2_TX_STORE_KM------|   |          |                      |            |
           |      |                                     |   |          |                      |            |
 Host may  |------|-------HDCP2_TX_STORE_KM_REQ-------->|   |          |                      |            |
 store     |      |                                     |   |          |                      |            | 
 current km|<-----|-------HDCP2_TX_STORE_KM_RESP--------|   |          |<------Pairing------->|            |
 ----------|------|-------------------------------------|---+          |                      |            |  
           |<-----|-Event : hdcp_tx_status -------------|              |<--Locality Check --->|            |
           |      |                                     |              |                      |            |
           |------|-HDCP_TX_STATUS_REQ ---------------->|              |                      |            |
           |      |                                     |              |                      |            |
           |<-----|-HDCP_TX_STATUS_CHANGE --------------|              |                      |            |
           |      |                                     |              |                      |            |
           |      +----------------------------------------------------+                      +------------+   

                                  Figure 4: Operation sequence – Embedded HDCP2.2
 

+-------------+   +----------------------------------------------------+                      +------------+
| Transmitter |   |                                        Transmitter |                      |     Sink   |
| Host        |   |                                         SM         |                      |     Device |
+-------------+   |                                                    |                      |            |
           |      |                                                    |                      |            |
 Set keys  |------|-HDCP1_TX_SEND_KEYS----------------->|              |                      |            |  
           |      |                                     |              |                      |            |
 Start HDCP|------|-HDCP_TX_CONFIGURATION ------------->|              |                      |            | 
           |      | (activate=1, support HDCP1)         |              |                      |            | 
           |      |                                     |              |<---authentication--->|            |            
           |<-----|-Event : hdcp_tx_status -------------|              |                      |            |
   HDCP    |      |                                     |              |                      |            |
   status  |------|-HDCP_TX_STATUS_REQ ---------------->|              |                      |            |
           |      |                                     |              |                      |            |
           |<-----|-HDCP_TX_STATUS_CHANGE --------------|              |                      |            | 
           |      |                                     |              |                      |            |  
Revocation |------|Event: HDCP_TX_IS_RECEIVER_ID_VALID->|              |                      |            |
list check |      |                                     |              |                      |            |  
           |------|-HDCP_TX_IS_RECEIVER_ID_VALID_REQ--->|              |                      |            |
           |      |                                     |              |                      |            |
           |<-----|--HDCP_TX_IS_RECEIVER_ID_VALID_RESP--|              |                      |            |
           |      |                                     |              |                      |            |
           |------|--HDCP_TX_RESPOND_RECEIVER_ID_VALID->|              |                      |            |
           |      |                                     |              |                      |            | 
           |<-----|-Event : hdcp_tx_status -------------|              |                      |            |
   HDCP    |      |                                     |              |                      |            |
   status  |------|-HDCP_TX_STATUS_REQ ---------------->|              |                      |            |
           |      |                                     |              |                      |            |
           |<-----|-HDCP_TX_STATUS_CHANGE --------------|              |                      |            | 
           |      |                                     |              |                      |            |
                  +----------------------------------------------------+                      +------------+
    +------------+         +----------+
    |  Host      |         |   uCPU   |
    |  Processor |         |   tasks  |
    |  tasks     |         +----------+
    +------------+
                                         Figure 5. Operation sequence - Embedded HDCP1.4

4.8.2	Additional security features
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
4.8.2.1	Km-key encryption
~~~~~~~~~~~~~~~~~~~~~~~~~
To provide higher security level an optional km-key encryption is provided. If km-key encryption is enabled while sending HDCP_TX_CONFIGURATION command, then HDCP controller will expect Master Key, 1.4 Device Keys and Global Constant. These keys will be decrypted using km-key (loaded using HDCP2_TX_SET_KM_KEY_PARAMS command described in chapter 7.9) by the controller’s internal Firmware and used during Authentication and Key Exchange procedure. The km-key encryption will also assure that when host reads Master Key it will receive it in encrypted form.
Enabling km-key encryption affects the following commands or their parameters:
•	HDCP2_TX_RESPOND_KM/Km
•	HDCP1_TX_SEND_KEYS/Transmitter Device Key
•	HDCP2_TX_STORE_KM_RESP/Km
•	HDCP_GENERAL_2_SET_LC

4.8.2.2	Cyphertext stealing
~~~~~~~~~~~~~~~~~~~~~~~~~~~
To use km-key encryption for the 1.4 Device Keys and avoid changes in the API a Cyphertext Stealing technique is used. This technique allows to apply AES-ECB in km-key encryption while 1.4 Device Key does not have size equal to multiple of 16.

4.9 HD Display TX Controller 
----------------------------
4.9.1 Info-Frame Handling 
~~~~~~~~~~~~~~~~~~~~~~~~~
Info-frames, which include meta-data (that is, auto type or video format), are initialized by the host 
processor.The host processor directly initializes the PKT-MEM (which stores the info-frames). 
Initialization includes loading info-frame into PKT-MEM and updating the PKT LUT.

4.9.2 EDID Handling 
~~~~~~~~~~~~~~~~~~~
The HD Display TX Controller issues command for reading EDID data from the remote side (sink). The 
EDID is sent to the host processor in a single block, that is, each block in one message. The HD Display 
TX Controller does not parse the EDID blocks. 

4.9.3 Audio Control 
~~~~~~~~~~~~~~~~~~~
When changing an audio stream format, the host processor must follow a specific programing 
sequence by configuring the I2S decoder and audio info frame packet.

4.9.4 Video Control 
~~~~~~~~~~~~~~~~~~~
The host processor needs to configure the video timing before enabling the video stream over the VIF 
interface. 

4.10 DPTX TX Controller 
----------------------
4.10.1 Protocol over Auxiliary 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The firmware provides an interface for the AUX and I2C-over-AUX data transactions. The host 
processor may use it for direct DPCD (including the HDCP address range) or EDID access. 

4.10.2 PHY (Physical layer) handling 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MHDP Bridge Driver initializes the PHY. 

DPTX PHY is handled by MHDP Bridge Driver, during link training (i.e. Lane count, Link Rate, Pre-emphasis and 
Voltage Swing control). 

5. Firmware 
============
5.1 Firmware Files 
-------------------
Firmware images are provided in two file formats: 

dram0.data, iram0.data – used by readmemh procedure (i.e. in simulation). 

dram0_xt.data, iram0_xt.data - used by APB boot sequence. 

5.2 Firmware Size 
-----------------
Firmware requires 64 KiB of memory for instructions (IMEM) and 64 KiB of memory for data (DMEM). 

Note: The memory size includes a margin of 8KB for IMEM and 4KB for DMEM. 

 
6. Mailbox Channel 
===================
Once the boot sequence is complete, entire communication between the processor (uCPU) and the host 
processor is through the mailbox. 

The APB and SAPB have their dedicated mailbox channels, where no resource is shared between these 
channels. 

Each of the mailbox channels has two mailboxes (RX and TX) for communication between the host 
processor and the HD Display TX Controller, where each mailbox being independent and working in 
parallel. The communication is to set the configuration and status updates. 

The mailbox is composed from the control and status registers and 8 words HW FIFO. 

The host processor must poll the mailbox_full bit that indicates whether the mailbox is ready to 
receive data from the host processor and write into FIFO (mailbox0_wr_data) only if the mailbox_full 
bit is 0. 

The host processor must poll the mailbox_empty bit. When mailbox_empty is 0, there is waiting 
data mailbox0_rd_data to read at least 1 word. 

When one side (host processor or uCPU) does not read from the mailbox, and the mailbox becomes 
full, the other side will write new bytes till the mailbox is full. In any operation, bytes will not overlap 
other bytes, and the mailbox will always carry full messages. 

Mailbox sequence is considered to be a safe sequence, FW doesn’t handle a wrong programing 
sequence. 

Unless specified otherwise, all fields (size, length, address) are in big-endian convention (MSB first), 
other message data is transmitted/received as LSB first. 
 
Table 3 shows the mailbox message data structure. 

 +--------------------+------------------+-------------------------------------------------------------+
 | Name               | Number of Bytes  |                                                             |
 +--------------------+------------------+-------------------------------------------------------------+
 | OPCODE             | 1                | Command Opcode (refer to section Commands interface)        |
 +--------------------+------------------+-------------------------------------------------------------+
 | MODuLE-ID          | 1                | Module type code (refer to Module ID table Interface codes) | 
 +--------------------+------------------+-------------------------------------------------------------+
 | SIZE               | 2                | Size of the message (not including header), max of 1020     |
 +--------------------+------------------+-------------------------------------------------------------+
 | MESSAGE            | 0-1020           | The message to transfer                                     |
 +--------------------+------------------+-------------------------------------------------------------+
                      Table 3: Mailbox Message Data Structure 

To simplify the message decoding in the FW, a different module ID is assigned for each main 
functionality. 

Table 4 Module ID Code 

 +--------------------+--------------------------------------------------------------------------------+
 | Module ID Code     |                      Functionality                                             |
 +--------------------+--------------------------------------------------------------------------------+
 | 0x01               | DP TX DisplayPort Upstream (Source) Device Commands (DPTX) and DisplayPort     |
 |                    | Upstream (Source) Device Command Responses (DPTX)                              |
 +--------------------+--------------------------------------------------------------------------------+
 | 0x07               | HDCP TX HDCP Transmitter Device Commands and HDCP Transmitter Device           |
 |                    | Command Responses                                                              |
 +--------------------+--------------------------------------------------------------------------------+
 | 0x09               | HDCP GENERAL HDCP Management Commands                                          |
 +--------------------+--------------------------------------------------------------------------------+
 | 0x0A               | GENERAL General Commands and General Command Responses                         |
 +--------------------+--------------------------------------------------------------------------------+                              
                                    Table 4: Module ID Code 
         

7. Commands Interface 
======================
Commands are used to manage the HD Display TX Controller and are carried over the mailbox channel. 

The following sections describe the message field of the mailbox data structure. 

7.1 General Commands 
--------------------

 +------------------------------------------------------------------------------------------------------+
 | Opcode | Command        | Description                   | Size    | Byte   |    Bits                 |
 |        |                |                               |         |        +-----+-------------------+
 |        |                |                               |         |        | Bit | Description       |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+
 | 0x00   | RESERVED       |                               |         |        |     |                   |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+
 |        |                | By default, the CPU is in the |         |        | 0   | 0 - standby       |
 |        |                | standby mode                  |         |        |     | 1 - active        |
 |        |                | This control is used to setup |    1    |    0   +-----+-------------------+
 |  0x01  | MAIN_CONTROL   | FW before running or set      |         |        |     |                   |
 |        |                | standby mode. It can be       |         |        | 7:1 | RESERVED          |
 |        |                | used in anytime.              |         |        |     |                   |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+
 |        |                | When this command is          |         |        |     |                   |
 |        |                | written to the HD Display TX  |         |        |     |                   |
 |        |                | Controller, he responds with  |         |        |     |                   |       
 |  0x02  | TEST_ECHO      | the same data. This           | 1-100   | 0-99   |  -  |  any value        |
 |        |                | command is only for debug     |         |        |     |                   |
 |        |                | purpose. It works both on     |         |        |     |                   |
 |        |                | APB and on SAPB               |         |        |     |                   |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+
 |  0x03  |                |                               |         |        |     |                   |
 +--------+ RESERVED       |                               |         |        |     |                   |
 |  0x04  |                |                               |         |        |     |                   |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+
 |        |                |                               |         |   0    |  -  | Register address  |
 |        |                |                               |         |        |     | [31:24]           |
 |        |                |                               |         +--------+-----+-------------------+
 |        |                |                               |         |   1    |  -  | Register address  |
 |        |                |                               |         |        |     | [23:16]           |
 |  0x05  | WRITE_REGISTER |       Write register          |   8     +--------+-----+-------------------+
 |        |                |                               |         |   2    |  -  | Register address  |
 |        |                |                               |         |        |     | [15:08]           |
 |        |                |                               |         +--------+-----+-------------------+
 |        |                |                               |         |   3    |  -  | Register address  |
 |        |                |                               |         |        |     | [07:00]           |
 |        |                |                               |         +--------+-----+-------------------+
 |        |                |                               |         |   4    |  -  | Data [31:24]      |
 |        |                |                               |         +--------+-----+-------------------+
 |        |                |                               |         |   5    |  -  | Data [23:16]      |
 |        |                |                               |         +--------+-----+-------------------+
 |        |                |                               |         |   6    |  -  | Data [15:08]      |
 |        |                |                               |         +--------+-----+-------------------+
 |        |                |                               |         |   7    |  -  | Data [07:00]      |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+
 |        |                |                               |         |   0    |  -  | Register address  |
 |        |                |                               |         |        |     | [31:24]           |
 |        |                |                               |         +--------+-----+-------------------+
 |        |                |                               |         |   1    |  -  | Register address  |
 |        |                |                               |         |        |     | [23:16]           |
 |  0x06  | WRITE_FIELD    | Write field of a register (if |   10    +--------+-----+-------------------+
 |        |                | field has multiple bits, they |         |   2    |  -  | Register address  |
 |        |                | must be consecutive). If      |         |        |     | [15:08]           |
 |        |                | invalid values will be passed |         +--------+-----+-------------------+
 |        |                | via command (bad index        |         |   3    |  -  | Register address  |
 |        |                | (should be 0-31) or bad       |         |        |     | [07:00]           |
 |        |                | number of bits to write       |         +--------+-----+-------------------+
 |        |                | (should be 1-32)) value of    |         |        |     | Index of least    |
 |        |                | register will not be changed. |         |   4    |  -  | significant bit of|
 |        |                |                               |         |        |     | field to write    |
 |        |                |                               |         +--------+-----+-------------------+
 |        |                |                               |         |   5    |  -  | Numbers of bits in|
 |        |                |                               |         |        |     | a field to write  | 
 |        |                |                               |         +--------+-----+-------------------+
 |        |                |                               |         |   6    |  -  | Data [31:24]      |
 |        |                |                               |         +--------+-----+-------------------+
 |        |                |                               |         |   7    |  -  | Data [23:16]      |
 |        |                |                               |         +--------+-----+-------------------+
 |        |                |                               |         |   8    |  -  | Data [15:08]      |
 |        |                |                               |         +--------+-----+-------------------+
 |        |                |                               |         |   9    |  -  | Data [07:00]      |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+
 |        |                |                               |         |   0    |  -  | Register address  |
 |        |                |                               |         |        |     | [31:24]           |
 |        |                |                               |         +--------+-----+-------------------+
 |        |                |                               |         |   1    |  -  | Register address  |
 |        |                |                               |         |        |     | [23:16]           |
 |  0x07  | READ_REGISTER  |       Read register           |   4     +--------+-----+-------------------+
 |        |                |                               |         |   2    |  -  | Register address  |
 |        |                |                               |         |        |     | [15:08]           |
 |        |                |                               |         +--------+-----+-------------------+
 |        |                |                               |         |   3    |  -  | Register address  |
 |        |                |                               |         |        |     | [07:00]           |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+
 |  0x08  | RESERVED       |                               |         |        |     |                   |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+
 |        |                |                               |         |        |     | Min value of      |      
 |        |                |                               |         |   0    |  -  | watchdog counter  | 
 |        |                |                               |         |        |     | [31:24]           |
 |        |                |                               |         +--------+-----+-------------------+
 |        |                |                               |         |        |     | Min value of      |      
 |        |                |                               |         |   1    |  -  | watchdog counter  | 
 |        |                |                               |         |        |     | [23:16]           |
 |        |                |                               |         +--------+-----+-------------------+
 |        |                |                               |         |        |     | Min value of      |      
 |        |                |                               |         |   2    |  -  | watchdog counter  | 
 |        |                |                               |         |        |     | [15:08]           |
 |        |                |                               |         +--------+-----+-------------------+
 |        |                |                               |         |        |     | Min value of      |      
 |        |                |                               |         |   3    |  -  | watchdog counter  | 
 |        |                |                               |         |        |     | [07:00]           |
 |  0x09  |SET_WATCHDOG_CFG|    Set watchdog configuration |   8     +--------+-----+-------------------+
 |        |                |                               |         |        |     | Min value of      |      
 |        |                |                               |         |   4    |  -  | watchdog counter  | 
 |        |                |                               |         |        |     | [31:24]           |
 |        |                |                               |         +--------+-----+-------------------+
 |        |                |                               |         |        |     | Min value of      |      
 |        |                |                               |         |   5    |  -  | watchdog counter  | 
 |        |                |                               |         |        |     | [31:24]           |
 |        |                |                               |         +--------+-----+-------------------+
 |        |                |                               |         |        |     | Min value of      |      
 |        |                |                               |         |   6    |  -  | watchdog counter  | 
 |        |                |                               |         |        |     | [31:24]           |
 |        |                |                               |         +--------+-----+-------------------+
 |        |                |                               |         |        |     | Min value of      |      
 |        |                |                               |         |   7    |  -  | watchdog counter  | 
 |        |                |                               |         |        |     | [31:24]           |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+
 |        |                |                               |         |   0    |  -  | Mask [31:24]      |
 |        |                |                               |         +--------+-----+-------------------+
 |        |                |                               |         |   1    |  -  | Mask [23:16]      |
 |        |                |                               |         +--------+-----+-------------------+ 
 |        |                |                               |         |   2    |  -  | Mask [15:08]      |
 |        |                |                               |         +--------+-----+-------------------+ 
 |        |                |                               |         |   3    |  -  | Mask [07:00]      |
 |        |                |                               |         +--------+-----+-------------------+ 
 |  0x0A  |INJECT_ECC_ERROR| Inject memory error by XOR    |         |        |     | Memory Type:      |
 |        |                | checked value with mask. It   |         |        |     | 0x01 – IRAM       |
 |        |                | is used for testing ECC error |         |        |     | (instruction is   |
 |        |                | correction feature. For mask  |         |   4    |  -  | modified)         |
 |        |                | with more than 1 set bit (ex. |         |        |     | (data is modified |
 |        |                | 0x11) uncorrectable error is  |         +--------+-----+-------------------+
 |        |                | injected. For 1 set bit (ex.  |         |        |     | Error Type:       |
 |        |                | 0x01) correctable error is    |         |        |     | 0x01 – data type  |
 |        |                | injected                      |    6    |        |     | (data/instruction |
 |        |                |                               |         |        |     |XORed directly with|
 |        |                |                               |         |        |     | mask)             |
 |        |                |                               |         |        |     | 0x02 – check type |
 |        |                |                               |         |    5   |  -  | (data/instruction |
 |        |                |                               |         |        |     | used to save MECR |
 |        |                |                               |         |        |     |into check bits ant|
 |        |                |                               |         |        |     |then MECR XORed    |
 |        |                |                               |         |        |     |XORed directly with|
 |        |                |                               |         |        |     |with mask)         |     
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+
 |        |                | Write to first word of        |         |        |     |                   |
 |        |                | USER_VECTOR and               |         |        |     |                   |
 |        |FORCE_FATAL_    | DEBUG_VECTOR 0 and cal        |   0     |   -    | -   |      -            | 
 |        |ERROR           | illegal instruction. Used for |         |        |     |                   | 
 |        |                | testing ASF integrity error.  |         |        |     |                   |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+
                                        Table 5: General Commands 

7.2 General Command Responses 
------------------------------

 +--------+----------------+-------------------------------+---------+--------+-------------------------+
 | Opcode | Command        | Description                   | Size    | Byte   |    Bits                 |
 |        |                |                               |         |        +-------------------------+
 |        |                |                               |         |        | Bit | Description       |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+
 | 0x00   | RESERVED       |                               |         |        |     |                   |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+
 |        |                | Response to active/standby    |         |        |     | 0 - standby       |
 | 0x01   |  MAIN_CONTROL  | setting                       |         |        |  0  | 1 - active        |
 |        |                |                               |    1    |    0   |-------------------------|
 |        |                |                               |         |        | 7:1 | RESERVED          |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+
 |        |                | Response to what was sent in  |         |        |     |                   |
 | 0x02   |  TEST_ECHO     | GENERAL_TEST_ECHO, sent on    | 1-100   | 0-99   | -   |    -              |
 |        |                | APB or SAPB                   |         |        |     |                   |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+
 | 0x03   |                |                               |         |        |     |                   |
 +--------+                |                               |         |        |     |                   |
 | 0x04   |                |                               |         |        |     |                   |
 +--------+  RESERVED      |                               |         |        |     |                   |
 | 0x05   |                |                               |         |        |     |                   |
 +--------+                |                               |         |        |     |                   |
 | 0x06   |                |                               |         |        |     |                   |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+
 |        |                |                               |         |   0    |  -  | Register address  |
 |        |                |                               |         |        |     | [31:24]           |
 |        |                |                               |         +--------+-----+-------------------+
 |        |                |                               |         |   1    |  -  | Register address  |
 |        |                |                               |         |        |     | [23:16]           |
 |  0x07  | READ_REGISTER  | Response for read register    |   8     +--------+-----+-------------------+
 |        |                |                               |         |   2    |  -  | Register address  |
 |        |                |                               |         |        |     | [15:08]           |
 |        |                |                               |         +--------+-----+-------------------+
 |        |                |                               |         |   3    |  -  | Register address  |
 |        |                |                               |         |        |     | [07:00]           |
 |        |                |                               |         +--------+-----+-------------------+
 |        |                |                               |         |   4    |  -  | Value [31:24]     |
 |        |                |                               |         +--------+-----+-------------------+
 |        |                |                               |         |   5    |  -  | Value [23:16]     |
 |        |                |                               |         +--------+-----+-------------------+
 |        |                |                               |         |   6    |  -  | Value [15:08]     |
 |        |                |                               |         +--------+-----+-------------------+
 |        |                |                               |         |   7    |  -  | Value [07:00]     |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+
                                  Table 6: General Command Responses 


7.3 DisplayPort Upstream (Source) Device Commands (DPTX) 
--------------------------------------------------------

 +--------+----------------+-------------------------------+---------+--------+-------------------------+
 | Opcode | Command        | Description                   | Size    | Byte   |    Bits                 |
 |        |                |                               |         |        +-------------------------+
 |        |                |                               |         |        | Bit | Description       |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+
 |        |                |                               |         |        |     | Power mode:       |
 |        |                |                               |         |        |     | 001b - Normal op  | 
 | 0x00   | SET_POWER_MNG  | Sets power state of the       |    1    |    0   |  -  | 010b - Power dn   |
 |        |                | sink device                   |         |        |     | 101b - Power dn   |
 |        |                |                               |         |        |     |        with AUX   |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+
 | 0x01   | RESERVED       |                               |         |        |     |                   |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+
 |        |                |                               |         |   0    |  -  | Segment           |
 |        |                |                               |         |--------+-----+-------------------+
 |        |                |                               |         |        |     | Extension:        |
 |        |                |                               |         |        |     |0x00 - No Extension| 
 | 0x02   | GET_EDID       | Gets EDID from the Sink       |    2    |   1    |  -  |       offset 0-127|
 |        |                | device                        |         |        |     |other- Extension of|
 |        |                |                               |         |        |     |       fset 128-255|
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+
 |        |                |                               |         |   0    |  -  |Number of bytes to |
 |        |                |                               |         |        |     |read (MSB)         |
 |        |                |                               |         |--------+-----+-------------------+
 |        |                |                               |         |   1    |  -  |Number of bytes to |
 |        |                |                               |         |        |     |read (LSB)         |
 |        |                |                               |         |--------+-----+-------------------+
 | 0x03   | READ_DPCD      | Read DPCD from the            |    5    |   2    | -   | Address[24:16]    |
 |        |                | Sink device                   |         |--------+-----+-------------------+
 |        |                |                               |         |   3    | -   | Address[15:08]    |
 |        |                |                               |         |--------+-----+-------------------+
 |        |                |                               |         |   4    | -   | Address[07:00]    |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+ 
 |        |                |                               |         |   0    |  -  |Number of bytes to |
 |        |                |                               |         |        |     |read (MSB)         |
 |        |                |                               |         |--------+-----+-------------------+
 |        |                |                               |         |   1    |  -  |Number of bytes to |
 |        |                | Write DPCD registers to       |         |        |     |read (LSB)         |
 |        |                | the Sink device -             |         |--------+-----+-------------------+
 | 0x04   | WRITE_DPCD     | sending this command          | 6-1020  |   2    | -   | Address[24:16]    |
 |        |                | will result in writing        |         |--------+-----+-------------------+
 |        |                | directly to the DPCD          |         |   3    | -   | Address[15:08]    |
 |        |                | bank in the Sink device       |         |--------+-----+-------------------+
 |        |                |                               |         |   4    | -   | Address[07:00]    |
 |        |                |                               |         |--------+-----+-------------------+
 |        |                |                               |         | 5-1019 | -   | Data to write     |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+  
 |        |                |                               |         |        |     | HPD event;        |
 |        |                |                               |         |        |  0  | 0 - disabled      |
 |        |                |                               |         |   0    |     | 1 - enabled       |
 | 0x05   | ENABLE_EVENT   | Enable/disable events         | 5       |        +-----+-------------------+
 |        |                |                               |         |        | 7:1 | RESERVED          |
 |        |                |                               |         +--------+-----+-------------------+
 |        |                |                               |         | 1-4    | -   | RESERVED          |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+
 |        |                |                               |         |   0    |  -  |Register Address   |
 |        |                |                               |         |        |  -  | [15:8]            |
 |        |                |                               |         +--------+-----+-------------------+
 |        |                |                               |         |   1    |  -  |Register Address   |
 |        |                |                               |         |        |     |[7:0]              |
 |        |                |                               |         +--------+-----+-------------------+
 | 0x06   | WRITE_REGISTER | Write Register                | 6       |   2    | -   | Msb data          |
 |        |                |                               |         +--------+-----+-------------------+
 |        |                |                               |         |   3    | -   | data              |
 |        |                |                               |         +--------+-----+-------------------+
 |        |                |                               |         |   4    | -   | data              |
 |        |                |                               |         +--------+-----+-------------------+
 |        |                |                               |         |   5    | -   | Lsb data          |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+
 | 0x07   |  RESERVED      |                               |         |        |     |                   |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+
 |        |                |                               |         |   0    |  -  |Register Address   |
 |        |                |                               |         |        |  -  | [15:8]            |
 |        |                |                               |         +--------+-----+-------------------+
 |        |                |                               |         |   1    |  -  |Register Address   |
 |        |                |                               |         |        |     |[7:0]              |
 |        |                |                               |         +--------+-----+-------------------+
 | 0x08   | WRITE_FIELD    | Write field of register       | 8       |   2    | -   | Index of least    |
 |        |                | (if field has multiple bits,  |         |        |     | significant bit of|
 |        |                | they must be consecutive)     |         |        |     | filed to write    |
 |        |                |                               |         |        |     | (0-31)            |       
 |        |                |                               |         +--------+-----+-------------------+
 |        |                |                               |         |   3    | -   | Number of bits in |
 |        |                |                               |         |        |     | a field to write  |
 |        |                |                               |         |        |     | (1 - 32)          | 
 |        |                |                               |         +--------+-------------------------+
 |        |                |                               |         |   4    | -   | Msb data          |
 |        |                |                               |         +--------+-------------------------|
 |        |                |                               |         |   5    | -   | data              |
 |        |                |                               |         +--------+-------------------------|
 |        |                |                               |         |   6    | -   | data              |
 |        |                |                               |         +--------+-------------------------|
 |        |                |                               |         |   7    | -   | Lsb data          |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+
 | 0x09   |  RESERVED      |                               |         |        |     |                   |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+ 
 | 0x0A   |  READ_EVENT    | Read events                   |  0      | -      | -   | -                 |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+
 | 0x0B   |                |                               |         |        |     |                   |
 | 0x0C   | RESERVED       |                               |         |        |     |                   |
 | 0x0D   |                |                               |         |        |     |                   |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+
 |        |                | In case of DPCD error,        |         |        |     |                   |
 | 0x0E   | GET_LAST_AUX_  | user may call this            |  0      |   -    | -   |   -               |
 |        | STATUS         | command to get latest         |         |        |     |                   |
 |        |                | aux status.                   |         |        |     |                   |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+
 | 0x10   | RESERVED       |                               |         |        |     |                   |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+
 | 0x11   | HPD_STATE      | Read state of HPD             |  0      |   -    | -   |   -               |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+
 |        |                | Performs a single Link        |         |        |     |Number of lanes (1,|
 |        |                | Training step:                |         |    0   |  -  |2,4). Also determin|
 |        |                |                               |         |        |     |es command size (4,|
 |        |                | 1. sets voltage swing         |         |        |     |5 or 7 resp)       |
 |        |                | and pre-emphasis levels       |         +--------+-----+-------------------+
 |        |                | to DPCD registers,            |         |    1   |  -  |Delay (μs) [15:8]  |
 |        |                | starting from 103h            |         +--------+-----+-------------------+
 |        |                |                               |         |    2   |  -  |Delay (μs) [07:0]  |
 | 0x12   | LT_ADJUST      | 2. waits for specified        |         +--------+-----+-------------------+
 |        |                | time (while test pattern      | 4,5 or 7|    3   |  -  |Value to write to  |
 |        |                | should be transmitted)        |         |        |  -  |DPCD reg 103h      |
 |        |                |                               |         +--------+-----+-------------------+
 |        |                | 3. reads lane statuses        |         |    4   |  -  |Value to write to  |
 |        |                | from DPCD (starting           |         |        |  -  |DPCD reg 104h      |
 |        |                | from 202h) and sends          |         +--------+-----+-------------------+
 |        |                | them back using               |         |    5   |  -  |Value to write to  |
 |        |                | DPCD_READ_RESP                |         |        |  -  |DPCD reg 105h      |
 |        |                | response                      |         +--------+-----+-------------------+
 |        |                |                               |         |    6   |  -  |Value to write to  |
 |        |                |                               |         |        |  -  |DPCD reg 106h      |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+
 | 0x13   |                |                               |         |        |     |                   |
 +--------+ RESERVED       |                               |         |        |     |                   |
 | 0x14   |                |                               |         |        |     |                   |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+
 |        |                |                               |         |   0    |  -  |Number of bytes to |
 |        |                |                               |         |        |     |read (MSB)         |
 |        |                |                               |         +--------+-----+-------------------|
 |        |                |  Performs a single I2C-       |         |   1    |  -  |Number of bytes to |
 |        |                |  over-AUX read                |         |        |     |read (MSB)         |
 | 0x15   | I2C_READ       |  transaction and returns      |     4   +--------+-----+-------------------+
 |        |                |  its response.                |         |   2    | 6:0 |I2C address (exclud|
 |        |                |                               |         |        |     |ing direction bit) |
 |        |                |                               |         |        +-----+-------------------+
 |        |                |                               |         |        | 7   | RESERVED          |
 |        |                |                               |         +--------+-----+-------------------+
 |        |                |                               |         |   3    |  -  |Value of MOT bit to|
 |        |                |                               |         |        |     |set: 0x00 or 0x01  |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+
 |        |                |                               |         |   0    |  -  |Number of bytes to |
 |        |                |                               |         |        |     |write (MSB)        |
 |        |                |                               |         +--------+-----+-------------------+
 |        |                |  Performs a single I2C-       |         |   1    |  -  |Number of bytes to |
 |        |                |  over-AUX read                |         |        |     |Write (MSB)        |
 | 0x16   | I2C_WRITE      |  transaction and returns      | 5-1020  +--------+-----+-------------------+
 |        |                |  its response.                |         |   2    | 6:0 |I2C address (exclud|
 |        |                |                               |         |        |     |ing direction bit) |
 |        |                |                               |         |        +-----+-------------------+
 |        |                |                               |         |        | 7   | RESERVED          |
 |        |                |                               |         +--------+-----+-------------------+
 |        |                |                               |         |   3    |  -  |Value of MOT bit to|
 |        |                |                               |         |        |     |set: 0x00 or 0x01  |
 |        |                |                               |         +--------+-----+-------------------+
 |        |                |                               |         | 4-1019 | -   | Bytes to write    |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+
 |        |                | Request for status of         |         |        |     |                   |
 | 0x17   | GET_LAST_I2C_  | latest I2C-over-AUX           |  0      |   -    | -   |   -               |
 |        | STATUs         | transaction.                  |         |        |     |                   |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+
                          Table 7: Display Port Upstream Device Commands 

 
7.4 DisplayPort Upstream (Source) Device Command Responses (DPTX) 
----------------------------------------------------------------- 

 +--------+----------------+-------------------------------+---------+--------+-------------------------+
 | Opcode | Command        | Description                   | Size    | Byte   |    Bits                 |
 |        |                |                               |         |        +-----+-------------------+
 |        |                |                               |         |        | Bit | Description       |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+
 | 0x00   |                |                               |         |        |     |                   |
 |--------+  RESERVED      |                               |         |        |     |                   |
 | 0x01   |                |                               |         |        |     |                   |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+
 |        |                |                               |         |  0     | -   | EDID length       |
 |        |                |                               |         |        |     | (up to 128B)      | 
 |        |                |                               |         +--------+-----+-------------------+
 |        |                | EDID of sink. If returned     |         |        |     |EDID segment       |
 | 0x02   | GET_EDID       | length is smaller than 128 –  | 2-130   |  1     |  -  |number. Should be  |
 |        |                | transaction failed            |         |        |     |equal to requested |
 |        |                |                               |         |        |     |segment            |
 |        |                |                               |         +--------+-----+-------------------+
 |        |                |                               |         | 2-129  | -   | EDID data         |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+
 |        |                |                               |         |   0    |  -  |Number of bytes    |
 |        |                |                               |         |        |     |(N) (MSB)          |
 |        |                |                               |         +--------+-----+-------------------+
 |        |                |                               |         |   1    |  -  |Number of bytes    |
 |        |                | Read DPCD from Sink device    |         |        |     |(N) (LSB)          |
 |        |                | response. When the            |         +--------+-----+-------------------+
 | 0x03   | READ_DPCD      | command is sent on the        | 5+N     |   2    | -   | Address[24:16]    |
 |        |                | SAPB bus, the number of       |         +--------+-----+-------------------+
 |        |                | bytes will be 0 and no AUX    |         |   3    | -   | Address[15:08]    |
 |        |                | transaction will be performed.|         +--------+-----+-------------------+
 |        |                | On error the number of        |         |   4    | -   | Address[07:00]    |
 |        |                | bytes/address will be         |         +--------+-----+-------------------+
 |        |                | different than the requested. |         |   5    | -   | Values            |
 |        |                |                               |         +--------+-----+-------------------+
 |        |                |                               |         |   -    | -   | -                 |
 |        |                |                               |         +--------+-----+-------------------+
 |        |                |                               |         | 5+(N-1)| -   | Values            |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+  
 |        |                | Write DPCD to Sink device     |         |   0    |  -  | Number of written |
 |        |                | response. When the            |         |        |     | bytes (MSB)       |
 |        |                | command is sent on the        |         +--------+-----+-------------------+
 |        |                | SAPB bus, the number of       |         |   1    |  -  | Number of written | 
 |        |                | bytes will be 0 and no AUX    |         |        |     | bytes (LSB)       |
 |        |                | transaction will be performed.|         +--------+-----+-------------------+
 | 0x04   | WRITE_DPCD     | In case of error (number of   | 5       |   2    | -   | Address[24:16]    |
 |        |                | bytes/address is different    |         +--------+-----+-------------------+
 |        |                | than requested),              |         |   3    | -   | Address[15:08]    |
 |        |                | GET_LAST_AUX_STAUS may.       |         +--------+-----+-------------------+
 |        |                | be used to get latest error.  |         |   4    | -   | Address[07:00]    |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+
 | 0x05   |                |                               |         |        |     |                   |
 | 0x06   |  RESERVED      |                               |         |        |     |                   |
 | 0x07   |                |                               |         |        |     |                   |
 | 0x08   |                |                               |         |        |     |                   |
 | 0x09   |                |                               |         |        |     |                   |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+ 
 |        |                |                               |         |        |  0  | Set means last    |
 |        |                |                               |         |        |     | event was a       |
 |        |                |                               |         |        |     | Plugged event-HPD |
 |        |                |                               |         |        |     | line change to    |
 |        |                |                               |         |        |     | High. This bit is |
 |        |                |                               |         |        |     | cleared after read| 
 |        |                |                               |         |        +-----+-------------------+
 |        |                | Each bit represents an event  |         |        |  1  | Set means last    | 
 |        |                | Bit set means event has       |	     |        |	    | event was a       |
 |        |                | occurred.                     |         |        |     | Unplugged Event   | 
 |        |                |                               |         |        |     | -HPD line change  |
 |        |                | Bit 0, 1, 2 are cleared after |         |        |     | to low. This bit  |
 |  0x0A  |  READ_EVENT    | read.                         |         |        |     | is cleared after  |
 |        |                |                               |         |        |     | read.             |
 |        |                |                               |  1      |   0    +-----+-------------------+
 |        |                |                               |         |        |  2  | Set means last    |
 |        |                |                               |         |        |     | event was IRQ HPD |
 |        |                |                               |         |        |     | Pulse. This bit is|
 |        |                |                               |         |        |     | cleared after read|
 |        |                |                               |         |        +-----+-------------------+
 |        |                |                               |         |        |  3  |HPD Line Current   | 
 |        |                |                               |         |        |     |state. This bit    |
 |        |                |                               |         |        |     |indicates the      |
 |        |                |                               |         |        |     |active state of the|
 |        |                |                               |         |        |     |line.              |
 |        |                |                               |         |        |     |0- Reset means the |
 |        |                |                               |         |        |     |the HPD line is in |
 |        |                |                               |         |        |     |unplugged state.   |                   
 |        |                |                               |         |        |     |1- Set means the   |
 |        |                |                               |         |        |     |HPD line is in     | 
 |        |                |                               |         |        |     |plugged state      |
 |        |                |                               |         |        +-----+-------------------+
 |        |                |                               |         |        | 7:4 | RESERVED          |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+ 
 | 0x0B   |                |                               |         |        |     |                   |
 | 0x0C   |  RESERVED      |                               |         |        |     |                   |
 | 0x0D   |                |                               |         |        |     |                   |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+ 
 |        |                | Status of latest DPCD         |         |        |     |000b ACK/incorrect |
 | 0x0E   | GET_LAST_AUX   | transaction                   |         |        |     | request           |
 |        | _STATUS        |                               |  1      |   0    | 2:0 |001b NACK          |
 |        |                |                               |         |        |     |010b DEFER         |
 |        |                |                               |         |        |     |011b Sink error-   |
 |        |                |                               |         |        |     | was no STOP condit|
 |        |                |                               |         |        |     | ion after receivin|
 |        |                |                               |         |        |     | g 16 bytes of data|
 |        |                |                               |         |        |     |100b incorrect bus |
 |        |                |                               |         |        |     | selected(secure AP|
 |        |                |                               |         |        |     | B)                |
 |        |                |                               |         |        +-----+-------------------+
 |        |                |                               |         |        | 7:3 | RESERVED          |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+ 
 | 0x0F   |  RESERVED      |                               |         |        |     |                   |
 | 0x10   |                |                               |         |        |     |                   |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+ 
 |        |                |                               |         |        |     | 0b - unplugged    |
 |        |                |                               |         |        |     | 1b - plugged      |
 | 0x11   | HPD_STATE      |  State of HPD                 |  1      |  0     |  0  |                   |
 |        |                |                               |         |        |     |                   |
 |        |                |                               |         |        +-----+-------------------+
 |        |                |                               |         |        | 7:1 | RESERVED          |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+ 
 | 0x12   |                |                               |         |        |     |                   |
 | 0x13   |  RESERVED      |                               |         |        |     |                   |
 | 0x14   |                |                               |         |        |     |                   |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+ 
 |        |                |  Response to I2C-over-AUX     |         |   0    |  -  |Number of bytes to |
 |        |                |  read transaction             |         |        |     |read (MSB)         |
 |        |                |                               |         +--------+-----+-------------------+
 |        |                |  In case of error (number of  |         |   1    |  -  |Number of bytes to |
 |        |                |  bytes is different than      |         |        |     |read (MSB)         |
 | 0x15   | I2C_READ       |  requested),                  | 4-1019  +--------+-----+-------------------+
 |        |                |  DPTX_GET_LAST_AUX_STAUS and  |         |   2    | 6:0 |I2C address (exclud|
 |        |                |  DPTX_GET_LAST_I2C_STAUS      |         |        |     |ing direction bit) |
 |        |                |  may be used to get latest    |         |        +-----+-------------------+
 |        |                |  error.                       |         |        | 7   | RESERVED          |
 |        |                |                               |         +--------+-----+-------------------+
 |        |                |                               |         | 3-1018 | -   |Bytes read         |
 |        |                |                               |         |        |     |                   |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+
 |        |                |  Response to I2C-over-AUX     |         |   0    |  -  |Number of bytes    |
 |        |                |  write transaction            |         |        |     |written (MSB)      |
 |        |                |                               |         +--------+-----+-------------------+
 |        |                |  In case of error (number of  |         |   1    |  -  |Number of bytes    |
 |        |                |  bytes is different than      |         |        |     |written (MSB)      |
 | 0x16   | I2C_WRITE      |  requested),                  | 3       +--------+-----+-------------------+
 |        |                |  DPTX_GET_LAST_AUX_STAUS and  |         |   2    | 6:0 |I2C address (exclud|
 |        |                |  DPTX_GET_LAST_I2C_STAUS      |         |        |     |ing direction bit) |
 |        |                |  may be used to get latest    |         |        +-----+-------------------+
 |        |                |  error.                       |         |        | 7   | RESERVED          |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+
 |        |                | Status of latest I2C over     |         |        |     | Status of latest  |
 | 0x17   | GET_LAST_I2C   | AUX transaction               |         |        |     | I2C-over-AUX      |
 |        | _STATUS        |                               |  1      |   0    | 1:0 | transaction:      |
 |        |                |                               |         |        |     |                   |
 |        |                |                               |         |        |     | 00b ACK           |
 |        |                |                               |         |        |     | 01b NACK          |
 |        |                |                               |         |        |     | 10b DEFER         |
 |        |                |                               |         |        +-----+-------------------+
 |        |                |                               |         |        | 7:2 | RESERVED          |
 +--------+----------------+-------------------------------+---------+--------+-----+-------------------+ 
                  Table 8: Display Port Upstream Device Command Responses



7.5 HDCP Transmitter Device Commands
------------------------------------

Following commands must be carried using Secure Mailbox, over SAPB.
 +--------+----------------+-------------------------------+---------+--------+--------------------------------------+
 | Opcode | Command        | Description                   | Size    | Byte   |    Bits                              |
 |        |                |                               |         |        +-----+--------------------------------+
 |        |                |                               |         |        | Bit | Description                    |
 +--------+----------------+-------------------------------+---------+--------+-----+--------------------------------+
 |        |                |                               |         |        |     | Choose HDCP ver:               |
 |        |                |                               |         |        |     | 00b -  HDCP 2.x                |
 |        |                |                               |         |        |     | 01b -  HDCP 1.x                |
 |        |                |                               |         |        | 1:0 | 10b - supports 2.x and 1.x.    |
 |        |                |                               |         |        |     |  Receiver try 2.x first        |
 |        |                |                               |         |        |     | 11b - reservered               |
 |        |                |                               |         |        +-----+--------------------------------+
 |        |                |                               |         |        |     | 0b - stop                      |
 |        |                |                               |         |        |  2  | 1b - activate                  |
 |        |                |                               |         |        +-----+--------------------------------+
 |        |                |                               |         |        |     | Content Stream type in case    |
 |        |                |                               |         |        |     | receiver is repeater           |
 |        |                |                               |         |        |     | 0b - Type 0 Content Stream. May| 
 |  0x00  | TX_CONFIGURATI | Use this command to set HDCP  |         |        |     |  be transmitted by the HDCP    |
 |        | ON             | transmitter type and wake it  |   1     |   0    |     |  Repeater to all HDCP Devices  |
 |        |                |  up (or stop it)              |         |        |  3  | 1b - Type 1 Content Stream.    |
 |        |                |                               |         |        |     |  Must not be transmitted by the|
 |        |                |                               |         |        |     |  HDCP Repeater to HDCP         |
 |        |                |                               |         |        |     |  1.x-compliant Devices and HDCP|
 |        |                |                               |         |        |     |  2.0-compliant Repeaters.      |
 |        |                |                               |         |        |     |  SST-only.                     |
 |        |                |                               |         |        |     |                                |
 |        |                |                               |         |        |     |Only Type 0 is compatible with  |
 |        |                |                               |         |        |     |MST mode. Setting type 1 with   |
 |        |                |                               |         |        |     |MST mode will result in         |
 |        |                |                               |         |        |     |incorrect operation.            |
 |        |                |                               |         |        +-----+--------------------------------+
 |        |                |                               |         |        |     |Specifies if km-key encryption  |
 |        |                |                               |         |        |     |will be enabled:                |
 |        |                |                               |         |        |     |  0b - No km-key encryption     |
 |        |                |                               |         |        |     |  1b - km-key encryption will be|
 |        |                |                               |         |        |     |   enabled                      |
 |        |                |                               |         |        |  4  |                                |
 |        |                |                               |         |        |     |When enabled km-key encryption  |
 |        |                |                               |         |        |     |will be applied to: Master Key, |
 |        |                |                               |         |        |     |Global Constant and 1.4 Device  |
 |        |                |                               |         |        |     |Keys. Refer                     |
 |        |                |                               |         |        |     |HDCP2_TX_SET_KM_KEY_PARAMS      |
 |        |                |                               |         |        |     |command for details. Sticky once|
 |        |                |                               |         |        |     |set then cannot be cleared      |
 |        |                |                               |         |        |     |except by Reset                 |
 |        |                |                               |         |        +-----+--------------------------------+
 |        |                |                               |         |        |     |                                |
 |        |                |                               |         |        | 7:5 |  RESERVED                      |
 +--------+----------------+-------------------------------+---------+--------+-----+--------------------------------+
 |        |TX_SET_PUBLIC_  | Use this command to set public|         |        |     | Modulus n (384 bytes)          |
 | 0x01   |KEY_PARAMS      | key for the HDCP2.x           |         | 0-383  |  -  |                                |
 |        |                | transmitter (HDCP2.x)         |  387    +--------+-----+--------------------------------+
 |        |                |                               |         | 384-386|  -  | Exponent E (3 bytes)           |
 +--------+----------------+-------------------------------+---------+--------+-----+--------------------------------+
 | 0x02   |TX_SET_DEBUG_   | Use this command to enforce   |         |  0-15  |  -  | KM (16 bytes)                  |
 |        |RANDOM_NUMBERS  | the random parameters (for    |         |-----------------------------------------------|
 |        |                | debug only), instead of the   |         |  16–23 |  -  | RN (8 bytes)                   |
 |        |                | random data generated by the  |         |-----------------------------------------------|
 |        |                | embedded RNG. Use this command|  56     |  24-39 |  -  | KS (16 bytes)                  |
 |        |                | after the  TX_SET_PUBLIC_KEY_ |         |-----------------------------------------------|
 |        |                | PARAMS command. Relevant to   |         |  40-47 |  -  | RIV (8 bytes)                  |
 |        |                | (HDCP2.x)                     |         |-----------------------------------------------|
 |        |                |                               |         |  48-55 |  -  | RTX (8 bytes)                  |
 +--------+----------------+-------------------------------+---------+--------+-----+--------------------------------+
 |  0x03  |  TX_RESPOND_KM | If km is stored, return all   |         |  0-4   |  -  | Receiver ID (5 bytes)          |
 |        |                | parameters, else there is no  | 0 or 53 +--------+-----+--------------------------------+
 |        |                | extra data (HDCP2.x)          |         |  5-20  |  -  | m (16 bytes)                   |
 |        |                |                               |         +--------+-----+--------------------------------+
 |        |                |                               |         |        |     | Km (16 bytes)                  |
 |        |                |                               |         |        |     | Need to be in encrypted form   |
 |        |                |                               |         | 21-36  | -   | when km-key encryption is      |
 |        |                |                               |         |        |     | enabled                        |
 |        |                |                               |         +--------+-----+--------------------------------+
 |        |                |                               |         | 37-52  | -   | Ekh(Km) (16 bytes)             |
 +--------+----------------+-------------------------------+---------+--------+-----+--------------------------------+
 |        |                |                               |         | 0x04   | -   | Transmitter Key Selection      |
 |        |                |                               |         |        |     | Vector (5 bytes)               |
 |        |                |                               |         +--------+-----+--------------------------------+
 |        |                |                               |         |        |     | Transmitter Device Key         |
 |        |                |                               |         | 6-284  |  -  | (280 bytes)                    |
 | 0x04   | TX_SEND_KEYS   | Set HDCP1 keys (HDCP1.x)      |  285    |        |     |                                |
 |        |                |                               |         |        |     | Need to be in encrypted form   |
 |        |                |                               |         |        |     | when km-key encryption is      |
 |        |                |                               |         |        |     | enabled. Since Device Key size |
 |        |                |                               |         |        |     | is not multiple of 16 bytes a  |
 |        |                |                               |         |        |     | Cyphertext Stealing technique  |
 |        |                |                               |         |        |     | will be used to encrypt it     |
 |        |                |                               |         |        |     | (if km-encryption is enabled). |
 +--------+----------------+-------------------------------+---------+--------+-----+--------------------------------+
 |        |                | Set HDCP1 a random number.    |         |        |     |                                |
 |  0x05  | TX_SEND_RANDOM | This command is for debug     |  8      | 0-7    | -   | An (8 bytes)                   |
 |        | _AN            | purpose only (HDCP1.x)        |         |        |     |                                |
 +--------+----------------+-------------------------------+---------+--------+-----+--------------------------------+
 |        |                | Use this command to get status|  0      | -      | -   | -                              |
 |  0x06  | TX_STATUS      | of HDCP transaction           |         |        |     |                                |
 +--------+----------------+-------------------------------+---------+--------+-----+--------------------------------+
 |  0x07  | TX_IS_KM_STORED| Check if KM is stored by host |  0      | -      | -   | -                              |
 |        |                | (HDCP2.x)                     |         |        |     |                                |
 +--------+----------------+-------------------------------+---------+--------+-----+--------------------------------+
 |  0x08  | TX_STORE_KM    | Ask host to store KM          |  0      | -      | -   | -                              |
 +--------+----------------+-------------------------------+---------+--------+-----+--------------------------------+
 |  0x09  | TX_IS_RECEIVER | Check if receivers ID are not |  0      | -      | -   | -                              |
 |        | _ID_VALID      | in revocation list            |         |        |     |                                |
 +--------+----------------+-------------------------------+---------+--------+-----+--------------------------------+
 |  0x0A  | TX_RESPOND_RECE| Respond to command HDCP_TX_IS |         |        |  0  | 0b - Receiver ID invalid       |
 |        | IVER_ID_VALID  | _RECEIVER_ID_VALID – if all   |         |        |     | 1b - Receiver ID valid         |
 |        |                | receivers are not in          |  1      |  0     +-----+--------------------------------+
 |        |                | revocation list return 1, if  |         |        | 7:1 | RESERVED                       |
 |        |                | one of the receivers in the   |         |        |     |                                |
 |        |                | revocation list, return 0     |         |        |     |                                |
 +--------+----------------+-------------------------------+---------+--------+-----+--------------------------------+
 |  0x0B  | RESERVED       |                               |         |        |     |                                |
 +--------+----------------+-------------------------------+---------+--------+-----+--------------------------------+
 |        | TX_SET_KM_KEY_ | This command is used to load  |         |        |     |                                |
 | 0x0C   | PARAMS         | customer defined Key for km-  | 16      | 0-15   | -   | Custom Key-master              |
 |        |                | key encryption into the       |         |        |     | (16 bytes)                     |
 |        |                | HDCP2.x transmitter controller|         |        |     |                                |
 +--------+----------------+-------------------------------+---------+--------+-----+--------------------------------+

             Table 9: HDCP Transmitter Device Commands Opcode Command Description Size Byte Bits Bit Description



7.6 HDCP Transmitter Device Command Responses
---------------------------------------------

Following commands must be carried using Secure Mailbox, over SAPB.
 
 +--------+----------------+-------------------------------+---------+--------+--------------------------------------+
 | Opcode | Command        | Description                   | Size    | Byte   |    Bits                              |
 |        |                |                               |         |        +-----+--------------------------------+
 |        |                |                               |         |        | Bit | Description                    |
 +--------+----------------+-------------------------------+---------+--------+-----+--------------------------------+
 | 0x00   |                |                               |         |        |     |                                |
 | 0x01   |  RESERVED      |                               |         |        |     |                                |
 | 0x02   |                |                               |         |        |     |                                |
 | 0x03   |                |                               |         |        |     |                                |
 | 0x04   |                |                               |         |        |     |                                |
 | 0x05   |                |                               |         |        |     |                                |
 +--------+----------------+-------------------------------+---------+--------+-----+--------------------------------+ 
 |        |                |                               |         |        |     | Link Auth status:              |
 |        |                |                               |         |        | 0   | 0b - Link is no-authenticated  |
 |        |                |                               |         |        |     | 1b - Link is authenticated     |
 |        |                |                               |         |        +-----+--------------------------------+
 |        |                |                               |         |        |     | Device type:                   |
 | 0x06   |TX_STATUS_CHANGE|                               |         |        | 1   | 0b - Receiver                  |
 |        |                |                               |         |        |     | 1b - Repeater                  |
 |        |                |                               |         |        +-----+--------------------------------+
 |        |                |                               |         |        |     | HDCP supported by Rx:          |
 |        |                |                               |         |   0    | 3:2 | 00b - RESERVED                 |
 |        |                |                               |         |        |     | 01b - HDCP 1.x                 |
 |        |                |                               |         |        |     | 10b - HDCP 2.x                 |
 |        |                |                               |         |        |     | 11b - RESERVED                 |
 |        |                |                               |         |        +-----+--------------------------------+
 |        |                |                               |         |        |     | AuthStreamId status:           |
 |        |                |                               |         |        |  4  | 0b - fail                      |
 |        |                |                               |         |        |     | 1b - success                   |
 |        |                |                               |         |        +-----+--------------------------------+
 |        |                |                               |         |        | 7:5 | Last error of HDCP.            |
 |        |                |                               |         +--------+-----+ byte[1][0] | byte[0][7:5]      |
 |        |                |                               |         |   1    | 0   | See table below.               |
 |        |                |                               |         +--------+-----+--------------------------------+
 |        |                |                               |         |   2-4  | -   | RESERVED                       |
 +--------+----------------+-------------------------------+---------+--------+-----+--------------------------------+
 |        |                | TX_IS_KM_STORED HD Display    |         |        |     |                                |
 |        |                | TX controller check if KM is  |         |        |     |                                |
 | 0x07   | TX_IS_KM_STORED| stored by host processor      |   5     | 0-4    |  -  |  Receiver ID (5 Bytes)         |
 |        |                | (HDCP2.x), host should respond|         |        |     |                                |
 |        |                | with HDCP2_TX_RESPOND_KM      |         |        |     |                                |
 +--------+----------------+-------------------------------+---------+--------+-----+--------------------------------+
 |        |                | Display TX controller ask host|         | 0-4    |  -  |  Receiver ID (5 Bytes)         |
 |        |                |  processor to store KM, host  |         +--------+-----+--------------------------------+
 |        |                |  processor may store it on non|         | 5-20   |  -  |  m(16 bytes)                   |
 | 0x08   | TX_STORE_KM    |  -volatile memory for faster  |         +--------+-----+--------------------------------+
 |        |                |  authentication (HDCP2.x)     |         | 21-36  |  -  |  Km(16 bytes)                  |
 |        |                |                               |         +--------+-----+--------------------------------+
 |        |                |(Km is in encrypted form when  |         | 37-52  |  -  |  Ekh(Km)(16 bytes)             |
 |        |                |km-key encryption enabled)     |         |        |     |                                |
 +--------+----------------+-------------------------------+---------+--------+-----+--------------------------------+ 
 |        |                |                               |         |        |     | Number of receivers (N) (1 in  |
 |        |                |                               |         |        |     | regular case, more can be in   |
 |        |                |                               |         |   0    |  -  | repeater) For HDCP 1.X max num |
 |        |                |                               |         |        |     | of devices:                    |
 |        |                |                               |         |        |     |  127 For HDCP 2.X: 31          |
 |        |                |                               |         +--------+-----+--------------------------------+
 |        |                |                               |         |   1    |  -  |  RESERVED                      |
 |        |                |                               |         +--------+-----+--------------------------------+
 |        |                |                               |         |   2    |     |                                |
 |        |                |                               |         +--------+  -  |  Receiver ID                   |
 |        |                |                               |         |   3    |     |  (5B for ech device)           |
 |        |                |                               |         +--------+     |                                |
 |        |                |                               |         |   4    |     |                                |
 |        |                |                               |         +--------+     |                                |
 |        |                |                               |         |   5    |     |                                |
 |        |                |                               |         +--------+     |                                |
 |        |                |                               |         |   6    |     |                                |
 |        |                |                               |         +--------+-----+--------------------------------+
 |        |                |                               |         |  ...   |  -  |                                |
 |        |                |                               |         +--------+-----+--------------------------------+
 |        |                |                               |         | 5*N+1  |  -  | ReceiverN ID(LSB)              |
 |        |                |                               |         +--------+-----+--------------------------------+
 |        |                |                               |         |        |  -  | Receiver 1:                    |
 |        |                |                               |         | 5*N+2  |     | HDCP 1.x - Binfo (MSB)         |
 |        |                |                               |         |        |     | HDCP 2.x - RxInfo (LSB)        |
 |        |                |                               |         +--------+-----+--------------------------------+
 |        |                |                               |         | 5*N+3  |  -  | Receiver 2:                    |
 |        |                |                               |         |        |     | HDCP 1.x - Binfo (MSB)         |
 |        |                |                               |         |        |     | HDCP 2.x - RxInfo (LSB)        |
 |        |                |                               |         +--------+-----+--------------------------------+
 |        |                |                               |         |   -    |  -  |                                |
 |        |                |                               |         +--------+-----+--------------------------------+
 |        |                |                               |         | 7*N+!  |  -  | Receiver N:                    |
 |        |                |                               |         |        |     | HDCP 1.x - Binfo (MSB)         |
 |        |                |                               |         |        |     | HDCP 2.x - RxInfo (LSB)        |
 +--------+----------------+-------------------------------+---------+--------+-----+--------------------------------+
               
                              Table 10: HDCP Transmitter Device Command Responses



 +------------+------------------------------------------------------------------------------------------------------+
 | ERROR Code |                            Description                                                               |
 +------------+------------------------------------------------------------------------------------------------------+
 | 0x00       |   No error occurred                                                                                  |
 +------------+------------------------------------------------------------------------------------------------------+
 | 0x01       |   HPD is down                                                                                        |
 +------------+------------------------------------------------------------------------------------------------------+
 | 0x02       |   SRM failure                                                                                        |
 +------------+------------------------------------------------------------------------------------------------------+
 | 0x03       |   Signature verification error                                                                       |
 +------------+------------------------------------------------------------------------------------------------------+
 | 0x04       |   H’ is not equal H (HDCP 2.X)                                                                       |
 +------------+------------------------------------------------------------------------------------------------------+
 | 0x05       |   V’ is not equal V (HDCP 1.X)                                                                       |
 +------------+------------------------------------------------------------------------------------------------------+
 | 0x06       |   Locality check failed (HDCP 2.X)                                                                   |
 +------------+------------------------------------------------------------------------------------------------------+
 | 0x07       |   AUX channel error                                                                                  |
 +------------+------------------------------------------------------------------------------------------------------+
 | 0x08       |   Reauthentication is needed                                                                         |
 +------------+------------------------------------------------------------------------------------------------------+
 | 0x09       |   Topology error. Exceeded max number of devices (MAX_CASCADE_EXCEEDED) or max repeater cascade depth|
 |            |   (MAX_DEVS_EXCEEDED) or seq_num_V is invalid                                                        |
 +------------+------------------------------------------------------------------------------------------------------+
 | 0x0A       |   RESERVED                                                                                           |
 +------------+------------------------------------------------------------------------------------------------------+
 | 0x0B       |   Not all reserved bytes in HDCP port are 0’s or receiver is not HDCP-capable                        |
 +------------+------------------------------------------------------------------------------------------------------+
 | 0x0C       |   RESERVED                                                                                           |
 +------------+------------------------------------------------------------------------------------------------------+
 | 0x0D       |   R0’ is not equal R0 (HDCP 1.X)                                                                     |
 +------------+------------------------------------------------------------------------------------------------------+
 | 0x0E       |   Watchdog expired                                                                                   |
 +------------+------------------------------------------------------------------------------------------------------+

                            Table 11: HDCP_TX_STATUS_CHANGE Error code ERROR Code Description


7.7 HDCP Management Commands
----------------------------
Following commands must be carried using Secure Mailbox, over SAPB.

 +--------+----------------+-------------------------------+---------+--------+--------------------------------------+
 | Opcode | Command        | Description                   | Size    | Byte   |    Bits                              |
 |        |                |                               |         |        +-----+--------------------------------+
 |        |                |                               |         |        | Bit | Description                    |
 +--------+----------------+-------------------------------+---------+--------+-----+--------------------------------+ 
 | 0x00   | HDCP_GENERAL_  |                               |         |        |     | 16-byte lc128                  |
 |        |  2_SET_LC      | Set the LC128                 | 16      | 0-15   | -   | (LC128 should be in encrypted  |
 |        |                |                               |         |        |     | form when km-key encryption is |
 |        |                |                               |         |        |     | enabled)                       |
 +--------+----------------+-------------------------------+---------+--------+-----+--------------------------------+ 
 |        |                | Sets random seed. Third party |         |        |     |                                |
 |        |                | TRNG must be used for         |         |        |     |                                |
 | 0x01   | HDCP_SET_SEED  | generating a true random seed | 32      | 0-32   | -   |  32 bytes of seed              |
 |        |                | number. Therefore, it is      |         |        |     |                                |
 |        |                | expected that the seed number |         |        |     |                                |
 |        |                | will meet the high entropy    |         |        |     |                                |
 |        |                | level                         |         |        |     |                                |
 +--------+----------------+-------------------------------+---------+--------+-----+--------------------------------+

                                 Table 12: HDCP Management Commands


